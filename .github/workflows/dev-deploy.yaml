name: Dev Deploy Pipeline

on:
  push:
    branches: ["main", "dev"]   # deploy khi có push vào main/dev
  workflow_dispatch:            # cho phép chạy tay

env:
  AWS_REGION: ap-southeast-1
  TF_WORKING_DIR: ./terraform
  DOCKER_IMAGE_TAG: v1

jobs:
  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build backend (Spring Boot)
        run: |
          cd todo-app/todobackend-springboot
          mvn -B clean package -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:${{ env.DOCKER_IMAGE_TAG }} ./todo-app/todobackend-springboot
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ env.DOCKER_IMAGE_TAG }}

      - name: Build & Push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ env.DOCKER_IMAGE_TAG }} ./todo-app/todoui-flask
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ env.DOCKER_IMAGE_TAG }}

      - name: Build & Push loadgenerator image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/loadgenerator:${{ env.DOCKER_IMAGE_TAG }} ./todo-app/loadgenerator
          docker push ${{ secrets.DOCKER_USERNAME }}/loadgenerator:${{ env.DOCKER_IMAGE_TAG }}

  terraform-deploy:
    name: Provision Infra with Terraform
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} init

      - name: Terraform Plan
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} plan
        env:
          TF_VAR_DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          TF_VAR_DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Terraform Apply
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} apply -auto-approve
        env:
          TF_VAR_DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          TF_VAR_DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
